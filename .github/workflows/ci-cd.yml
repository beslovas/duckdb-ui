name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  DUCKDB_VERSION: 1.3.2
  TAG_PREFIX: ""

jobs:
  build-image:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Check for Dockerfile changes or tag
      id: check-changes
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q "image/Dockerfile" || [[ "${{ github.ref }}" == refs/tags/* ]]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Skip if no changes
      if: steps.check-changes.outputs.has_changes != 'true'
      run: |
        echo "No Dockerfile changes or tag detected, skipping build"
        exit 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=latest
          type=raw,value=${{ env.DUCKDB_VERSION }}

    - name: Build and push multi-arch Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./image
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        # provenance: false
        # sbom: false

  image-security-scan:
    runs-on: ubuntu-latest
    needs: build-image
    
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/${{ github.repository }}:${{ env.DUCKDB_VERSION }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  chart:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Get chart version
      id: chart_version
      run: |
        echo "CHART_VERSION=$(cat chart/Chart.yaml | awk -F"[ ',]+" '/version:/{print $2}' | head -n 1)" >> $GITHUB_OUTPUT

    - name: Check if chart version exists
      id: tag_exists
      run: |
        TAG_EXISTS=false
        if git tag -l | grep '^${{ env.tag_prefix }}${{ steps.chart_version.outputs.CHART_VERSION }}$' > /dev/null ; then
            TAG_EXISTS=true
        fi
        echo TAG_EXISTS=$TAG_EXISTS >> $GITHUB_OUTPUT

    - name: Get Previous tag
      id: previous_tag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        prefix: v
      if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

    - name: Tag release
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ steps.chart_version.outputs.CHART_VERSION }}
        tag_prefix: ${{ env.tag_prefix }}
      if: steps.tag_exists.outputs.TAG_EXISTS == 'false'
      
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: ${{ steps.tag_version.outputs.new_tag }}
        prerelease: ${{ contains(steps.chart_version.outputs.CHART_VERSION, '-') }}
      if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

    - name: Publish
      uses: bpsoraggi/helm-gh-pages@2a2569e394590687d2c508516af3c9bb9fe7fa7e
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        charts_dir: .
        charts_url: https://beslovas.github.io/duckdb
        owner: beslovas
        repository: duckdb
        # branch: master
        commit_username: beslovas
        commit_email: beslovas@users.noreply.github.com

    - name: Publish Helm chart to the ghcr.io registry
      uses: appany/helm-oci-chart-releaser@v0.5.0
      with:
        name: duckdb
        tag: ${{ steps.chart_version.outputs.CHART_VERSION }}
        repository: beslovas/duckdb
        path: chart
        registry: ghcr.io
        registry_username: ${{ github.actor }}
        registry_password: ${{ secrets.GITHUB_TOKEN }}
        sign: false
      if: steps.tag_exists.outputs.TAG_EXISTS == 'false'